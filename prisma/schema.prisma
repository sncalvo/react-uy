// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id           String        @id @default(cuid())
  name         String
  description  String
  image        String
  link         String
  cursor       Int           @unique @default(autoincrement())
  date         DateTime
  community    Community     @relation(fields: [communityId], references: [id])
  communityId  String
  participants Participant[]
  tags         Tag[]
}

model Participant {
  id          String  @id @default(cuid())
  name        String
  image       String
  defaultLink String
  githubLink  String
  twitterLink String
  linkedLink  String
  events      Event[]
}

model Tag {
  id      String @id @default(cuid())
  name    String
  link    String
  eventId String

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model Community {
  id          String @id @default(cuid())
  name        String
  description String
  image       String
  link        String

  events Event[]
}
